name: 'Update Story Status'
description: 'Update Tracker Boot story status'

inputs:
  tracker-boot-api-token:
    description: 'Tracker Boot API Key'
    required: true
  project-id:
    description: 'Project ID'
    required: true
  job-status:
    description: 'Job Status'
    required: true

runs:
  using: 'composite'
  steps:
    - name: set up node
      uses: actions/setup-node@v6
      with:
        node-version: 24
    - name: install dependencies
      shell: bash
      run: |
        cd ${{ github.action_path }}/scripts
        npm ci
    - name: extract story id from commit message
      id: story_id
      shell: bash
      run: |
        COMMIT_MSG="${{ github.event.head_commit.message }}"
        EXTRACTED_ID=$(echo "$COMMIT_MSG" | grep -oP '\b\#?\K\d{9,}\b' || true)
        FIRST_ID=$(echo "$EXTRACTED_ID" | head -n 1)
        echo "story_id=$FIRST_ID" >> $GITHUB_OUTPUT
    - name: extract status from commit message
      id: extract_keyword
      shell: bash
      run: |
        COMMIT_MSG="${{ github.event.head_commit.message }}"

        KEYWORD=$(echo "$COMMIT_MSG" | \
          grep -oPi '\b(finish|fix)\w*\b(?=\s+\#?\b\d{9}\b)' | \
          head -n 1 | \
          tr '[:upper:]' '[:lower:]' || true)
        
        if [ -n "$KEYWORD" ]; then
          echo "keyword=$KEYWORD" >> $GITHUB_OUTPUT
        else
          echo "keyword=" >> $GITHUB_OUTPUT
        fi
    - name: start story
      shell: bash
      if: ${{ inputs.job-status == 'success' }}
      env:
        TRACKER_BOOT_URL: 'https://trackerboot.com'
        TRACKER_BOOT_API_TOKEN: ${{ inputs.tracker-boot-api-token }}
        PROJECT_ID: ${{ inputs.project-id }}
        STORY_ID: ${{ steps.story_id.outputs.story_id }}
      run: |
        cd ${{ github.action_path }}/scripts
        echo "Update story status to 'Started'. If story already started, this will be no-op."
        npm run action -- start-story $STORY_ID
    - name: finish story
      shell: bash
      if: ${{ inputs.job-status == 'success' && steps.extract_keyword.outputs.keyword != '' }}
      env:
        TRACKER_BOOT_URL: 'https://trackerboot.com'
        TRACKER_BOOT_API_TOKEN: ${{ inputs.tracker-boot-api-token }}
        PROJECT_ID: ${{ inputs.project-id }}
        STORY_ID: ${{ steps.story_id.outputs.story_id }}
      run: |
        cd ${{ github.action_path }}/scripts
        echo "Found keyword: ${{ steps.extract_keyword.outputs.keyword }}"
        if [[ "${{ steps.extract_keyword.outputs.keyword }}" == "finish"* ]]; then
          npm run action -- finish-story $STORY_ID finish
        elif [[ "${{ steps.extract_keyword.outputs.keyword }}" == "fix"* ]]; then
          npm run action -- finish-story $STORY_ID fix
        fi
