name: 'Action for Tracker Boot'

inputs:
  tracker-boot-api-token:
    description: 'Tracker Boot API Key'
    required: true
  project-id:
    description: 'Project ID'
    required: true
  job-status:
    description: 'Job Status'
    required: true

runs:
  using: 'composite'
  steps:
    - name: set up node
      uses: actions/setup-node@v6
      with:
        node-version: 24
    - name: install dependencies
      shell: bash
      working-directory: scripts
      run: npm ci
    - name: extract story id from commit message
      id: story_id
      shell: bash
      run: |
        COMMIT_MSG="${{ github.event.head_commit.message }}"
        EXTRACTED_ID=$(echo "$COMMIT_MSG" | grep -oP '\b\#?\K\d{9,}\b' || true)
        FIRST_ID=$(echo "$EXTRACTED_ID" | head -n 1)
        echo "story_id=$FIRST_ID" >> $GITHUB_OUTPUT
    - name: extract status from commit message
      id: story_status
      shell: bash
      run: |
        IS_FINISHED=$(echo "$COMMIT_MSG" | grep -iPc '\b(finished|finish|finishes)\b\s+\#?\b\d{9}\b' || true)
        if [ "$IS_FINISHED" -gt 0 ]; then
          echo "is_finished=true" >> $GITHUB_OUTPUT
        else
          echo "is_finished=false" >> $GITHUB_OUTPUT
        fi
    - name: start story
      shell: bash
      working-directory: scripts
      if: ${{ steps.story_status.outputs.is_finished == 'false' }}
      env:
        TRACKER_BOOT_URL: 'https://trackerboot.com'
        TRACKER_BOOT_API_TOKEN: ${{ inputs.tracker-boot-api-token }}
        PROJECT_ID: ${{ inputs.project-id }}
        STORY_ID: ${{ steps.story_id.outputs.story_id }}
      run: |
        echo "Update story status to 'Started'. If story already started, this will be no-op."
        npm run action -- start-story $STORY_ID
    - name: finish story
      shell: bash
      working-directory: scripts
      if: ${{ inputs.job-status == 'success' && steps.story_status.outputs.is_finished == 'true' }}
      env:
        TRACKER_BOOT_URL: 'https://trackerboot.com'
        TRACKER_BOOT_API_TOKEN: ${{ inputs.tracker-boot-api-token }}
        PROJECT_ID: ${{ inputs.project-id }}
        STORY_ID: ${{ steps.story_id.outputs.story_id }}
      run: |
        echo "Update story status to 'Finished'. If story already started, this will be no-op."
        npm run action -- finish-story $STORY_ID
    - name: notify failed CI
      shell: bash
      working-directory: scripts
      env:
        TRACKER_BOOT_URL: 'https://trackerboot.com'
        TRACKER_BOOT_API_TOKEN: ${{ inputs.tracker-boot-api-token }}
        PROJECT_ID: ${{ inputs.project-id }}
      if: ${{ inputs.job-status == 'failure' && github.run_attempt == 1}}
      run: |
        echo "Pipeline is failed. Notify Tracker Boot."
        WORKFLOW_URL="${{ github.SERVER_URL }}/${{ github.REPOSITORY }}/actions/runs/${{ github.RUN_ID }}"
        COMMIT_URL="${{ github.SERVER_URL }}/${{ github.REPOSITORY }}/commit/${{ github.SHA }}"
        npm run action -- notify-failed-ci $WORKFLOW_URL $COMMIT_URL ${{ github.sha }}
